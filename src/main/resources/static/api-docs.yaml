components:
  schemas:

    Accounts:
      description: Schema to hold Account information
      properties:
        accountNumber:
          description: Account Number of Eazy Bank account
          format: int64
          type: integer
        accountType:
          description: Account type of Eazy Bank account
          example: Savings
          type: string
        branchAddress:
          description: Eazy Bank branch address
          type: string
      required:
        - accountNumber
        - accountType
        - branchAddress
      type: object

    Customer:
      description: Schema to hold Customer and Account information
      properties:
        account:
          $ref: '#/components/schemas/Accounts'
        email:
          description: Email address of the customer
          example: tutor@eazybytes.com
          type: string
        mobileNumber:
          description: Mobile Number of the customer
          example: '9345432123'
          pattern: (^$|[0-9]{10})
          type: string
        name:
          description: Name of the customer
          example: Eazy Bytes
          maxLength: 30
          minLength: 5
          type: string
      required:
        - email
        - name
      type: object

    Link:
      properties:
        href:
          type: string
        templated:
          type: boolean
      type: object

    Response:
      description: Schema to hold successful response information
      properties:
        message:
          type: string
        status:
          type: string
        statusCode:
          description: Status code in the response
          example: '200'
          type: string
        statusMsg:
          description: Status message in the response
          example: Request processed successfully
          type: string
      type: object

info:
  contact:
    email: kaushik.natua@hyland.com
    name: Kaushik Natua
  description: OpenAPI Documentation with Swagger UI using Java Springboot
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: OpenAPI Documentation using Java Springboot
  version: v1

openapi: 3.0.1

paths:

  /actuator:
    get:
      operationId: links
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
                  type: object
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                additionalProperties:
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
                  type: object
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                additionalProperties:
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
                  type: object
                type: object
          description: OK
      summary: Actuator root web endpoint
      tags:
        - Actuator

  /actuator/beans:
    get:
      operationId: beans
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'beans'
      tags:
        - Actuator

  /actuator/caches:
    delete:
      operationId: caches_2
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'caches'
      tags:
        - Actuator
    get:
      operationId: caches
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'caches'
      tags:
        - Actuator

  /actuator/caches/{cache}:

    delete:
      operationId: caches-cache_2
      parameters:
        - in: path
          name: cache
          required: yes
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'caches-cache'
      tags:
        - Actuator

    get:
      operationId: caches-cache
      parameters:
        - in: path
          name: cache
          required: yes
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'caches-cache'
      tags:
        - Actuator

  /actuator/conditions:
    get:
      operationId: conditions
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'conditions'
      tags:
        - Actuator

  /actuator/configprops:
    get:
      operationId: configprops
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'configprops'
      tags:
        - Actuator

  /actuator/configprops/{prefix}:
    get:
      operationId: configprops-prefix
      parameters:
        - in: path
          name: prefix
          required: yes
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'configprops-prefix'
      tags:
        - Actuator

  /actuator/env:
    get:
      operationId: env
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'env'
      tags:
        - Actuator

  /actuator/env/{toMatch}:
    get:
      operationId: env-toMatch
      parameters:
        - in: path
          name: toMatch
          required: yes
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'env-toMatch'
      tags:
        - Actuator

  /actuator/health:
    get:
      operationId: health
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'health'
      tags:
        - Actuator

  /actuator/health/**:
    get:
      operationId: health-path
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'health-path'
      tags:
        - Actuator

  /actuator/heapdump:
    get:
      operationId: heapdump
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'heapdump'
      tags:
        - Actuator

  /actuator/info:
    get:
      operationId: info
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'info'
      tags:
        - Actuator

  /actuator/loggers:
    get:
      operationId: loggers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'loggers'
      tags:
        - Actuator

  /actuator/loggers/{name}:

    get:
      operationId: loggers-name
      parameters:
        - in: path
          name: name
          required: yes
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'loggers-name'
      tags:
        - Actuator

    post:
      operationId: loggers-name_2
      parameters:
        - in: path
          name: name
          required: yes
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              enum:
                - TRACE
                - DEBUG
                - INFO
                - WARN
                - ERROR
                - FATAL
                - 'OFF'
              type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'loggers-name'
      tags:
        - Actuator

  /actuator/mappings:
    get:
      operationId: mappings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'mappings'
      tags:
        - Actuator

  /actuator/metrics:
    get:
      operationId: metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'metrics'
      tags:
        - Actuator

  /actuator/metrics/{requiredMetricName}:
    get:
      operationId: metrics-requiredMetricName
      parameters:
        - in: path
          name: requiredMetricName
          required: yes
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'metrics-requiredMetricName'
      tags:
        - Actuator

  /actuator/scheduledtasks:
    get:
      operationId: scheduledtasks
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'scheduledtasks'
      tags:
        - Actuator

  /actuator/threaddump:
    get:
      operationId: threaddump
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            text/plain;charset=UTF-8:
              schema:
                type: object
          description: OK
      summary: Actuator web endpoint 'threaddump'
      tags:
        - Actuator

  /api/accounts/create:
    post:
      description: REST API to create new Customer &  Account informations
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: yes
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: HTTP Status CREATED
      summary: Create Account REST API
      tags:
        - OpenAPI Documentation with Swagger UI using Java Springboot

  /api/accounts/delete:
    delete:
      description: REST API to delete Customer &  Account details based on a mobile number
      operationId: deleteAccountDetails
      parameters:
        - in: query
          name: mobileNumber
          required: yes
          schema:
            pattern: (^$|[0-9]{10})
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: HTTP Status OK
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: HTTP Status Internal Server Error
      summary: Delete Account & Customer Details REST API
      tags:
        - OpenAPI Documentation with Swagger UI using Java Springboot

  /api/accounts/fetch:
    get:
      description: REST API to fetch Customer &  Account details based on a mobile number
      operationId: fetchAccountDetails
      parameters:
        - in: query
          name: mobileNumber
          required: yes
          schema:
            pattern: (^$|[0-9]{10})
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: HTTP Status OK
      summary: Fetch Account Details REST API
      tags:
        - OpenAPI Documentation with Swagger UI using Java Springboot

  /api/accounts/update:
    put:
      description: REST API to update Customer &  Account details based on a account number
      operationId: updateAccountDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: yes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: HTTP Status OK
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: HTTP Status Internal Server Error
      summary: Update Account Details REST API
      tags:
        - OpenAPI Documentation with Swagger UI using Java Springboot

servers:
  - description: Generated server url
    url: http://localhost:8080

tags:
  - description: CRUD OpenAPIs in Java Springboot to CRUD Operations
    name: OpenAPI Documentation with Swagger UI using Java Springboot
  - description: Monitor and interact
    externalDocs:
      description: Spring Boot Actuator Web API Documentation
      url: https://docs.spring.io/spring-boot/docs/current/actuator-api/html/
    name: Actuator
